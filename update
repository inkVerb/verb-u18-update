#!/bin/sh
# inkVerb updater for Verber™, verb.ink

# This "updates" the serfs and "upgrades" Verber
## serfs are updated every time. Upgrades only relate to Verber framework which has verber version numbers related to each patch/release.
## This contains many version patches for a Verber™ sequentially, one version at a time.
## This is run at the path: /var/local/verb/${VUPDATE_REPO}/update

# DEV NOTE: Larger versions must be at the bottom, smaller versions at the top, so "descending"

# DEV INSTRUCTIONS: Put all related files for each patch in a folder named by the version number, ie 0.805

# DEV NOTE: Serfs are automatically copied & updated from ${VUPDATE_REPO}/serfs to the Verber before any patches run, after the verno check.


MIN_VERNO=0.85.0
VUPDATE_REPO="verb-update"

## Sample version updater:
#UPGRADE_PATCH_VERNO=0.85.1
#if [ $(echo ${UPGRADE_PATCH_VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") -gt $(echo ${VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") ] ; then
#
## Move to working directory of the patch
#if [ -d "/var/local/verb/${VUPDATE_REPO}/${UPGRADE_PATCH_VERNO}/" ]; then
#cd /var/local/verb/${VUPDATE_REPO}/${UPGRADE_PATCH_VERNO}/; fi
#
## Run the update scripts for this patch
#
###### SCRIPTS GO HERE #####
## NOTE: PWD is /var/local/verb/${VUPDATE_REPO}/${UPGRADE_PATCH_VERNO}/
#
## eg: echo "I would update the serfs here, but that happens automatically."
#
#
#
############################
## Set and refresh the current version into inklists
#sed -i "s/VERNO=.*/VERNO=\"${UPGRADE_PATCH_VERNO}\"/g" /var/local/verb/configs/inklists/verberverno
#. /var/local/verb/configs/inklists/verberverno
#echo "Verber upgraded to v${VERNO}"
#else
#echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
#fi
###############END#UPGRADE#PATCH#


## Version Check ##
### The minimum version that can use this updater
## Include the configs
. /var/local/verb/configs/sitenameip
. /var/local/verb/configs/siteurilist
#. /var/local/verb/configs/siteurilist # Include this after MIN_VERNO=0.812
. /var/local/verb/configs/inklists/verberverno
## Check minimal updateable version
if [ $(echo ${MIN_VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") -gt $(echo ${VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") ] ; then
echo "Current Verber™ version is ${VERNO}, minimum ${MIN_VERNO} to use this updater.
Run updateverberlegacy for older versions."
exit 0
fi

# Update Serfs
rm -f /var/local/verb/serfs/*
cp /var/local/verb/${VUPDATE_REPO}/serfs/* /var/local/verb/serfs/
echo "Serfs have been updated."

# Update inkLists
## inkGet
. /var/local/verb/configs/siteinkget
if $INKGET_LIST="AUTO_UPDATE"; then
cp inklists/repoverlist /var/local/verb/configs/inklists/
cp inklists/repolinks /var/local/verb/configs/inklists/
echo "Repo version list is up-to-date."
else
echo "Repo version list unchanged because this is a custom Verber."
fi

# Run version-by-version updates


UPGRADE_PATCH_VERNO=0.85.1
if [ $(echo ${UPGRADE_PATCH_VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") -gt $(echo ${VERNO} | sed -e "s/\.//" | sed -e "s/^0*//") ] ; then

# Move to working directory of the patch
if [ -d "/var/local/verb/${VUPDATE_REPO}/${UPGRADE_PATCH_VERNO}/" ]; then
cd /var/local/verb/${VUPDATE_REPO}/${UPGRADE_PATCH_VERNO}/; fi

# Run the update scripts for this patch

##### SCRIPTS GO HERE #####



###########################
# Set and refresh the current version into inklists
sed -i "s/VERNO=.*/VERNO=\"${UPGRADE_PATCH_VERNO}\"/g" /var/local/verb/configs/inklists/verberverno
. /var/local/verb/configs/inklists/verberverno
echo "Verber upgraded to v${VERNO}"
else
echo "${UPGRADE_PATCH_VERNO} patch not necessary..."
fi
##############END#UPGRADE#PATCH#




# Security check
/var/local/verb/serfs/setsecure; wait

# Finish
echo "Verber at v${VERNO} framework from ${SITEUPDATEREPO}."

