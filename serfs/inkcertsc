#!/bin/sh
#inkVerbSerf! verb.ink

# This creates one-time ssl certs for inkCertSC (Self-Cert)
## Prerequesite: inkcertinstallsc
## DEV: This has not been tested and may still need inkcertdosc, inkcertaddsc, inkcdertaddallsc to be written
## DEV: This has not been tested and is useful in theory only, such as for private networks

# How to use:
## ./inkcertsc FULLDOMAIN

# Eg:
## ./inkcertsc inkisaverb.com
## ./inkcertsc somesub.inkisaverb.com


DOMAIN="${1}"

# Include the configs
. /opt/verb/conf/sitenameip
. /opt/verb/conf/siteurilist
. /opt/verb/conf/sitetldstatus
. /opt/verb/conf/inkcert/inkcertstatus

if [ "${INKCERTSCINSTALLED}" != "DONE" ]; then
echo "inkCert-SC must be installed first, run: inkcertinstallsc"
exit 0; fi

# CA #

# Create the CA root key
## Note: omitting options like "-aes256" or "-des3" because they instruct openssl to encrypt the key with a passphrase, causing a prompt
cd /etc/inkcert/sc/ca
openssl genrsa -out priv/ca.${DOMAIN}.key.pem 4096
chmod 400 priv/ca.${DOMAIN}.key.pem

# CA Subject details:
country="US"
state="Ink"
locality="Cyberspace City"
organization="inkVerb Verber @ ${nameURI}"
organizationalunit="inkCert Self-Cert"
email="certmaster@${nameURI}"
companyname="This is an autocert, not from another company."
commonname="${nameURI}"

# Create the CA root cert
## Note: "-nodes" means there will be no password prompt
cd /etc/inkcert/sc/ca
openssl req -config /opt/verb/conf/inkcert/sc-ca-openssl.cnf \
	-key priv/ca.${DOMAIN}.key.pem \
	-new -nodes -x509 -days 3650 -sha256 -extensions v3_ca \
	-out certs/ca.${DOMAIN}.cert.pem
	-subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email/unstructuredName=$companyname/"
chmod 444 certs/ca.cert.pem

# Intermediate CA #

# Create the intermediate key
## Note: omitting options like "-aes256" or "-des3" because they instruct openssl to encrypt the key with a passphrase, causing a prompt
cd /etc/inkcert/sc/intrm
openssl genrsa -out priv/intrm.${DOMAIN}.key.pem 4096
chmod 400 priv/intrm.${DOMAIN}.key.pem

# Intermediate Subject details:
country="US"
state="Ink"
locality="Cyberspace City"
organization="inkVerb Verber @ ${nameURI}"
organizationalunit="inkCert Self-Cert"
email="certmaster@${nameURI}"
companyname="This is an autocert, not from another company."
commonname="serve.${nameURI}"

# Create the intermediate cert CSR
cd /etc/inkcert/sc/intrm
openssl req -config /opt/verb/conf/inkcert/sc-intrm-openssl.cnf \
	-key priv/intrm.${DOMAIN}.key.pem \
	-new -nodes -sha256
	-out csr/intrm.${DOMAIN}.csr.pem
	-subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email/unstructuredName=$companyname/"

# Sign the intermediate cert
## Note: "CA" & "CAkey" override the "certificate" & "private_key" settings in the .cnf file
cd /etc/inkcert/sc/ca
openssl ca -config /opt/verb/conf/inkcert/sc-ca-openssl.cnf \
	-extensions v3_intermediate_ca \
	-CA /etc/inkcert/sc/ca/certs/ca.${DOMAIN}.cert.pem \
	-CAkey /etc/inkcert/sc/ca/priv/ca.${DOMAIN}.key.pem \
	-days 3650 -notext -md sha256 \
	-in /etc/inkcert/sc/intrm/csr/intrm.${DOMAIN}.csr.pem \
	-out /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem
chmod 444 /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem

# Verify the signed intermediate cert
openssl verify -CAfile /etc/inkcert/sc/ca/certs/ca.cert.pem /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem

# Create the intermediate chain
cat /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem /etc/inkcert/sc/ca/certs/ca.${DOMAIN}.cert.pem > /etc/inkcert/sc/intrm/certs/ca-intrm.${DOMAIN}.chain.cert.pem
chmod 444 /etc/inkcert/sc/intrm/certs/ca-intrm.${DOMAIN}.chain.cert.pem

# Client #

# Create the client key
## Note: omitting options like "-aes256" or "-des3" because they instruct openssl to encrypt the key with a passphrase, causing a prompt
cd /etc/inkcert/sc/cli
openssl genrsa -out priv/${DOMAIN}.key.pem 2048
chmod 400 priv/${DOMAIN}.key.pem

# Client Subject details:
country="US"
state="Ink"
locality="Cyberspace City"
organization="inkVerb Verber @ ${nameURI}"
organizationalunit="inkCert Self-Cert"
email="certmaster@${nameURI}"
companyname="This is an autocert, not from another company."
commonname="${DOMAIN}"

# Create the client CSR
cd /etc/inkcert/sc/cli
openssl req -config /opt/verb/conf/inkcert/sc-intrm-openssl.cnf \
	-key priv/cli.${DOMAIN}.key.pem \
	-new -sha256 \
	-out csr/cli.${DOMAIN}.csr.pem \
	-subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email/unstructuredName=$companyname/"

# Sign the client cert
cd /etc/inkcert/sc/intrm
openssl ca -config /opt/verb/conf/inkcert/sc-intrm-openssl.cnf \
	-extensions server_cert \
	-CA /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem \
	-CAkey /etc/inkcert/sc/intrm/priv/intrm.${DOMAIN}.key.pem \
	-days 3650 -notext -md sha256 \
	-in /etc/inkcert/sc/cli/csr/cli.${DOMAIN}.csr.pem \
	-out /etc/inkcert/sc/cli/certs/cli.${DOMAIN}.cert.pem
chmod 444 /etc/inkcert/sc/cli/certs/cli.${DOMAIN}.cert.pem

# Verify the signed intermediate cert
openssl verify -CAfile /etc/inkcert/sc/intrm/certs/ca-intrm.${DOMAIN}.chain.cert.pem /etc/inkcert/sc/cli/certs/cli.${DOMAIN}.cert.pem

# Create the full chain (CA - Intrm - Cli)
cat /etc/inkcert/sc/cli/certs/cli.${DOMAIN}.cert.pem /etc/inkcert/sc/intrm/certs/ca-intrm.${DOMAIN}.chain.cert.pem > /etc/inkcert/sc/cli/certs/full.${DOMAIN}.chain.cert.pem
chmod 444 /etc/inkcert/sc/cli/certs/full.${DOMAIN}.chain.cert.pem

# Delete the roots
rm /etc/inkcert/sc/ca/priv/ca.${DOMAIN}.key.pem
rm /etc/inkcert/sc/intrm/priv/intrm.${DOMAIN}.key.pem
rm /etc/inkcert/sc/intrm/certs/intrm.${DOMAIN}.cert.pem

# Publish the root cert
mv /etc/inkcert/sc/ca/certs/ca.${DOMAIN}.cert.pem /etc/inkcert/sc/rcinst/${DOMAIN}.rootcert.pem

# Deploy to the server
mv /etc/inkcert/sc/intrm/certs/ca-intrm.${DOMAIN}.chain.cert.pem /etc/inkcert/sc/pub/${DOMAIN}.chain.cert.pem
mv /etc/inkcert/sc/cli/certs/full.${DOMAIN}.chain.cert.pem /etc/inkcert/sc/pub/${DOMAIN}.fullchain.cert.pem
mv /etc/inkcert/sc/cli/certs/cli.${DOMAIN}.cert.pem /etc/inkcert/sc/pub/${DOMAIN}.cert.pem
mv /etc/inkcert/sc/cli/priv/cli.${DOMAIN}.key.pem /etc/inkcert/sc/keys/${DOMAIN}.key.pem
mkdir -p /etc/inkcert/sc/live/${DOMAIN}
ln -sfn /etc/inkcert/sc/pub/${DOMAIN}.fullchain.cert.pem /etc/inkcert/sc/live/${DOMAIN}/fullchain.cert.pem
ln -sfn /etc/inkcert/sc/pub/${DOMAIN}.chain.cert.pem /etc/inkcert/sc/live/${DOMAIN}/chain.cert.pem
ln -sfn /etc/inkcert/sc/pub/${DOMAIN}.cert.pem /etc/inkcert/sc/live/${DOMAIN}/cert.pem
ln -sfn /etc/inkcert/sc/keys/${DOMAIN}.key.pem /etc/inkcert/sc/live/${DOMAIN}/key.pem
