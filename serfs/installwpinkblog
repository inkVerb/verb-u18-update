#!/bin/sh
#inkVerbSerf! verb.ink
#set -e

# This downloads and installs WordPress to blog.NAME.verb.ink
## WordPress actually resides in www/vapps/wp.inkblog

# All options are optional, but must are sequential, omit last options first.

# How to use:
## ./installwpinkblog [dbase] [dbuser] [dbpassword]


CVAPPNAME=wp.inkblog
# "wp" is the normal app, so it must be specified when retrieving from the repo

# Include the config
. /opt/verb/conf/siteurilist

DBASE=$1
DBUSER=$2
DBPASSWORD=$3
CLEANNAME=$(echo $CVAPPNAME | sed -e 's/\.//g')

# Check for existing inkblog
. /opt/verb/conf/siteinstallstatus
if [ "${INKblog}" != "NOT_YET" ]; then
echo "Um... How do I say this...
Your blog at blog.${inkURI} already has ${INKblog} installed. This just isn't going to work.
"
exit 0
fi

# Download and establish wordpress in the server to pre-created domain
cd /var/www/vapps
/opt/verb/serfs/inkget wp; wait
### Check
/opt/verb/serfs/inkget wp check
if [ "$?" = 4 ]; then
echo "Repo failed to retrieve the file."
exit 4; fi
if [ ! -f wp.vtxz ]; then
echo "Failed to retrieve from the repo."
exit 4; fi

rm -rf wp
/opt/verb/serfs/vtxzout wp; wait

# Auto database
if [ -z ${4} ]; then
DBPASSWORD=$(pwgen -s -1 10); fi
if [ -z ${2} ]; then
DBASE=${CLEANNAME}$(pwgen -s -1 6); fi
if [ -z ${3} ]; then
DBUSER=${DBASE}; fi

mv wp ${CVAPPNAME}; wait
/opt/verb/serfs/setvapplinkon ${CVAPPNAME}; wait
ln -sfn /var/www/vapps/${CVAPPNAME} /srv/vip/_webapps/; wait
chown -R www-data:www-data /var/www/html/ink.blog; wait
chown -R www-data:www-data /var/www/vapps/${CVAPPNAME}; wait

# Create the database and credentials
mysql --defaults-extra-file=/opt/verb/conf/mysqlboss.cnf -e "
CREATE DATABASE  ${DBASE};
GRANT ALL PRIVILEGES ON ${DBASE}.* TO '${DBUSER}'@'localhost' IDENTIFIED BY '${DBPASSWORD}';
FLUSH PRIVILEGES;"

# Write the config for backup
echo "#!/bin/sh
APPDBASE=${DBASE}
APPDDBUSR=${DBUSER}
APPDDBPAS=${DBPASSWORD}" > /opt/verb/conf/vapp.${CVAPPNAME}

# VIP domain
ln -s /var/www/html/ink.blog /srv/vip/_domains/

# Put the settings in the WordPress config file
cd ${CVAPPNAME}
cp wp-config-sample.php wp-config.php
sed -i "s/database_name_here/${DBASE}/g" wp-config.php
sed -i "s/username_here/${DBUSER}/g" wp-config.php
sed -i "s/password_here/${DBPASSWORD}/g" wp-config.php

# Add the secure salt and key strings
AUTH_KEY=$(pwgen -s -1 27)
SECURE_AUTH_KEY=$(pwgen -s -1 27)
LOGGED_IN_KEY=$(pwgen -s -1 27)
NONCE_KEY=$(pwgen -s -1 27)
AUTH_SALT=$(pwgen -s -1 27)
SECURE_AUTH_SALT=$(pwgen -s -1 27)
LOGGED_IN_SALT=$(pwgen -s -1 27)
NONCE_SALT=$(pwgen -s -1 27)
sed -i "s/define('AUTH_KEY',         'put your unique phrase here');/define('AUTH_KEY',         '${AUTH_KEY}');/g" wp-config.php
sed -i "s/define('SECURE_AUTH_KEY',  'put your unique phrase here');/define('SECURE_AUTH_KEY',  '${SECURE_AUTH_KEY}');/g" wp-config.php
sed -i "s/define('LOGGED_IN_KEY',    'put your unique phrase here');/define('LOGGED_IN_KEY',    '${LOGGED_IN_KEY}');/g" wp-config.php
sed -i "s/define('NONCE_KEY',        'put your unique phrase here');/define('NONCE_KEY',        '${NONCE_KEY}');/g" wp-config.php
sed -i "s/define('AUTH_SALT',        'put your unique phrase here');/define('AUTH_SALT',        '${AUTH_SALT}');/g" wp-config.php
sed -i "s/define('SECURE_AUTH_SALT', 'put your unique phrase here');/define('SECURE_AUTH_SALT', '${SECURE_AUTH_SALT}');/g" wp-config.php
sed -i "s/define('LOGGED_IN_SALT',   'put your unique phrase here');/define('LOGGED_IN_SALT',   '${LOGGED_IN_SALT}');/g" wp-config.php
sed -i "s/define('NONCE_SALT',       'put your unique phrase here');/define('NONCE_SALT',       '${NONCE_SALT}');/g" wp-config.php

# Reset all permissions
chown -R www-data:www-data /var/www/vapps/${CVAPPNAME}

# Set up the Apache config
cp /opt/verb/conf/site-files/conf/blog.${inkURI}.conf-wpblg /etc/apache2/sites-available/blog.${inkURI}.conf
apache2ctl graceful
## inkCert SSL certs
### Not setup
if grep -Fq "INKCERTED=NO" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${inkURI}; then
echo "FYI: inkCert is not yet setup for ${inkURI}."
fi
### inkCert-LE DONE
if grep -Fq "INKCERTED=DONE_LE" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${inkURI}; then
echo "inkCert-LE is already setup for ${inkURI}. Updating the Apache configs..."
/opt/verb/serfs/inkcertaddallle ${inkURI}
wait
fi
### inkCert-IC DONE
if grep -Fq "INKCERTED=DONE_IC" /opt/verb/conf/inkcert/cli-ini/siteinkcert.${inkURI}; then
echo "inkCert-IC is already setup for ${inkURI}. Updating the Apache configs..."
/opt/verb/serfs/inkcertadd blog.${inkURI}
wait
fi

# Set the site-wide inkblog config
sed -i "s/INKblog=.*/INKblog=\"WordPress\"/g" /opt/verb/conf/siteinstallstatus

# Reset all permissions
chown -R www-data:www-data /var/www/vapps/${CVAPPNAME}

# Finish
echo "These are setup:

Database: ${DBASE}
Database user: ${DBUSER}
Database password: ${DBPASSWORD}

Go to http://blog.${inkURI}/wp-admin/index.php to install.
"

