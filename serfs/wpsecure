#!/bin/sh
#inkVerbSerf! verb.ink
#set -e

# This adds/updates the secure salts to wp-config.php files of a pre-installed (or installing) WordPress site in www/domains
## This does not normally need to be run on fresh WP installations since the same functions and behavior are embedded in the installwp serfs.

# How to use:
## ./wpsecure [domain.tld or folder]


DOMAIN=$1
AUTH_KEY=$(pwgen -s -1 27)
SECURE_AUTH_KEY=$(pwgen -s -1 27)
LOGGED_IN_KEY=$(pwgen -s -1 27)
NONCE_KEY=$(pwgen -s -1 27)
AUTH_SALT=$(pwgen -s -1 27)
SECURE_AUTH_SALT=$(pwgen -s -1 27)
LOGGED_IN_SALT=$(pwgen -s -1 27)
NONCE_SALT=$(pwgen -s -1 27)

# Insert the random pwgen strings
cd /var/www/html/${DOMAIN}/
sed -i "s/define('AUTH_KEY',         .*/define('AUTH_KEY',         '${AUTH_KEY}');/g" wp-config.php
sed -i "s/define('SECURE_AUTH_KEY',  .*/define('SECURE_AUTH_KEY',  '${SECURE_AUTH_KEY}');/g" wp-config.php
sed -i "s/define('LOGGED_IN_KEY',    .*/define('LOGGED_IN_KEY',    '${LOGGED_IN_KEY}');/g" wp-config.php
sed -i "s/define('NONCE_KEY',        .*/define('NONCE_KEY',        '${NONCE_KEY}');/g" wp-config.php
sed -i "s/define('AUTH_SALT',        .*/define('AUTH_SALT',        '${AUTH_SALT}');/g" wp-config.php
sed -i "s/define('SECURE_AUTH_SALT', .*/define('SECURE_AUTH_SALT', '${SECURE_AUTH_SALT}');/g" wp-config.php
sed -i "s/define('LOGGED_IN_SALT',   .*/define('LOGGED_IN_SALT',   '${LOGGED_IN_SALT}');/g" wp-config.php
sed -i "s/define('NONCE_SALT',       .*/define('NONCE_SALT',       '${NONCE_SALT}');/g" wp-config.php

echo "${DOMAIN} now has secure strings."
