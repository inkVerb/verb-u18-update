#!/bin/sh
#inkVerbSerf! verb.ink

# This sets a new serial number for an existing DNS record in the inkDNS zone file on this Verber

# How to use:
## ./inkdnsserial [domain]


DNSDOMAIN=$1

# Check if the zone file exists
if [ ! -f "/opt/verb/conf/inkdns/zones/db.${DNSDOMAIN}" ]; then
/bin/echo "The domain \"${DNSDOMAIN}\" has no DNS zone file. That comes first."
exit 8; fi

# Set the new serial
## Create the datestamp
DATESTAMP="$(date '+%Y%m%d')"
## Set the increment for today
### Make sure we have a count file
if [ ! -f "/opt/verb/conf/inkdns/serial" ]; then
/bin/echo "0" > /opt/verb/conf/inkdns/serial; fi
OLDSERIAL="$(/bin/cat /opt/verb/conf/inkdns/serial)"
### Keep it to two digits
if [ "${OLDSERIAL}" -gt "98" ]; then
OLDSERIAL="0"; fi
### Keep the digits double
NEWSERIAL=$(expr ${OLDSERIAL} + 1)
if [ "${NEWSERIAL}" -le "9" ]; then
NEWSERIAL="0${NEWSERIAL}"; fi
### Record the serial
/bin/echo "${NEWSERIAL}" > /opt/verb/conf/inkdns/serial
## Create a datestamp-based serial number to the second (how inkVerb does it)
SERNO="${DATESTAMP}${NEWSERIAL}\t\t; Serial No"
## Set it in the files
/bin/sed -i "/; Serial No/c ${SERNO}" /opt/verb/conf/inkdns/zones/db.${DNSDOMAIN}
