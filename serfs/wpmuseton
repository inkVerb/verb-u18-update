#!/bin/sh
#inkVerbSerf! verb.ink
#set -e

# This sets up a WordPress vapp for multisite
## Specifically, this adds the multisite settings in wp-config.php necessary to begin the installation from the WordPress dashboard

# How to use:
## ./wpmuseton [domain.tld]

# Eg:
## ./wpmuseton inkisaverb.com
## ./wpmuseton mysubsite.inkisaverb.com


WPDOMAIN=$1

# Check if already set
if grep -Fq "define( 'WP_ALLOW_MULTISITE', true );" /var/www/html/${WPDOMAIN}/wp-config.php; then
echo "Multisite already set. To remove, use: wpmusetoff"
exit 8; fi


# We've got to fenagle this around in order to make the code readable while also doing this properly
## Make a content file to work with
cp /var/www/html/${WPDOMAIN}/wp-config.php /var/www/html/${WPDOMAIN}/wp-config.php.Vmu
## Sanitize the content file
sed -i "/<?php/d" /var/www/html/${WPDOMAIN}/wp-config.php.Vmu
## Start stacking the new file
echo "<?php" > /var/www/html/${WPDOMAIN}/wp-config.php.NEW
## Add the declaration
echo "
/* Multisite via inkVerb */
define( 'WP_ALLOW_MULTISITE', true );" >> /var/www/html/${WPDOMAIN}/wp-config.php.NEW
## Add the original content
cat /var/www/html/${WPDOMAIN}/wp-config.php.Vmu >> /var/www/html/${WPDOMAIN}/wp-config.php.NEW
## Check that the universe is in working order
if [ ! -e "/var/www/html/${WPDOMAIN}/wp-config.php.Vmu" ]; then
echo "Something is very not right."
exit 6; fi
## Remove & replace the original
rm -f /var/www/html/${WPDOMAIN}/wp-config.php
mv /var/www/html/${WPDOMAIN}/wp-config.php.NEW /var/www/html/${WPDOMAIN}/wp-config.php
## Cleanup
rm -f /var/www/html/${WPDOMAIN}/wp-config.php.Vmu

# Finish
echo "http://${WPDOMAIN} is ready to install WP Multisite. Log in again, make sure all plugins are disabled, then go to Tools > Network Setup and follow instructions.
Then, when instructed to modify the wp-config.php and .htaccess files, just run: wpmuhtaccess & wpmusetconfig, which will complete that setup for you."

