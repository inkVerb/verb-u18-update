#!/bin/sh
#inkVerbSerf! verb.ink
set -e

# This creates the package with username and password for the Client to download and install.
## Prerequisite: inknetaddverberclient/inknetaddvrkclient (the requesting client must already exist on this serveer as an inkNet jailed user)
## FYI, the client name refers to the file at verb/configs/inknet/v.../...

# DEV NOTE:
## This uses some variables interchangeably. This is for compatability since CLIENTNAME comes from the config file retrieved using VCNAME and VTYPE. Altering this could break the script later because of coterminous but separate jargon dependencies.

# How to use:
## ./inknetzipclientpkg [vrk/verber type] [verb-namespace - ONLY IF VERBER] [client name]

# Eg: (In exactly this format! Check the Client settings to get the client name.)
## ./inknetzipclientpkg verber joeysite joeyhost_joeysite_verb_ink
## ./inknetzipclientpkg vrk joey_gCodingStationJoe


VTYPE=$1
# Determine vrk or verber
if [ "${VTYPE}" = "vrk" ]; then
## Truncate the name in case the full name was used
VCNAME=$(echo $2 | cut -c1-18)
else
 if [ "${VTYPE}" = "verber" ]; then
VCNSPACE=$2
## Truncate the name in case the full name was used
VCNAME=$(echo $3 | cut -c1-18)
 else
 echo "You need to specify \"vrk\" or \"verber\". Read the instructions."
 exit 22
 fi
fi

# Check if the Client has been added
if [ "${VTYPE}" = "vrk" ]; then
 if [ ! -e "/var/local/verb/configs/inknet/vrk/client.vrk.${VCNAME}.cnf" ]; then
 echo "You must add the Client first using: inknetaddvrkclient."
 exit 22
 fi
fi
if [ "${VTYPE}" = "verber" ]; then
 if [ ! -e "/var/local/verb/configs/inknet/verber/${VCNSPACE}/client.verber.${VCNAME}.cnf" ]; then
 echo "You must add the Client first using: inknetaddverberclient."
 exit 22
 fi
fi

# Include the configs
if [ "${VTYPE}" = "vrk" ]; then
. /var/local/verb/configs/inknet/vrk/client.vrk.${VCNAME}.cnf; fi
if [ "${VTYPE}" = "verber" ]; then
. /var/local/verb/configs/inknet/verber/${VCNSPACE}/client.verber.${VCNAME}.cnf; fi
. /var/local/verb/configs/inknet/ca.verber.cnf

# Create the working directory
if [ ! -f ~/.ssh/inknet/${VCNAME} ]; then
mkdir ~/.ssh/inknet/${VCNAME}
fi

# Put everything in a temporary, restricted downloadable directory
SECPATH=$(pwgen -1 -s 10)
## Add the Client username configs
if [ "${VTYPE}" = "vrk" ]; then
cp /var/local/verb/configs/inknet/vrk/client.vrk.${VCNAME}.cnf ~/.ssh/inknet/${VCNAME}/
echo "#!/bin/sh
VERBERNAME=${IAMCANAME}" > ~/.ssh/inknet/${VCNAME}/verbername
fi
if [ "${VTYPE}" = "verber" ]; then
cp /var/local/verb/configs/inknet/verber/${VCNSPACE}/client.verber.${VCNAME}.cnf ~/.ssh/inknet/${VCNAME}/
echo "#!/bin/sh
VERBERNAME=${IAMCANAME}" > ~/.ssh/inknet/${VCNAME}/verbername
fi
cd ~/.ssh/inknet/
zip -r ${VCNAME}.zip ${VCNAME}
rm -rf ${VCNAME}
mkdir /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}
mv ${VCNAME}.zip ${VCNAME}.ink
mv ${VCNAME}.ink /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}

# For non-IP Vrk Stations
if [ "${CLIENTIP}" = "NOT_SET" ]; then
echo "
<Files ${VCNAME}.ink>
 AuthType Basic
 AuthName \"Password Protected Area\"
 AuthUserFile .htpasswd
 Require valid-user
</Files>
" > /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}/.htaccess
SECNAME=$(pwgen -1 -s 15)
SECPASS=$(pwgen -1 -s 15)
echo "${SECNAME}:${SECPASS}" > /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}/.htpasswd
echo "Great! Now, hurry up and get the file from this URL:
 https://${IAMCAHOST}.${IAMCAURI}/${SECPATH}/inknet/${VCNAME}.ink

 Login:    ${SECNAME}
 Password: ${SECPASS}

 It expires in about 30 minutes, so hurry!
"

# For IP Vrk Stations and Verbers
else
echo "
<Files ${VCNAME}.ink>
 Order deny,allow
 Deny from all
 Allow from ${CLIENTIP}
</Files>
" > /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}/.htaccess
chown -R www-data:www-data /var/www/html/${IAMCAHOST}.${IAMCAURI}/inknet/${SECPATH}/
echo "Great! Now, hurry up and enter this code with inknetaddcavpkg: ${SECPATH}

 It expires in about 30 minutes. Hurry!
"
fi

